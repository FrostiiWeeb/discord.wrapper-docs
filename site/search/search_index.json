{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Basic bot from discord import wrapper bot = wrapper.Bot(token=\"Your TOKEN\") bot.run() ============= class Bot(token, command_prefix, intents) Type: class ============= def run() Type: function","title":"Getting Started"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#basic-bot","text":"from discord import wrapper bot = wrapper.Bot(token=\"Your TOKEN\") bot.run() ============= class Bot(token, command_prefix, intents) Type: class ============= def run() Type: function","title":"Basic bot"},{"location":"http_requests/","text":"HTTP Requests from discord import wrapper import asyncio bot = wrapper.Bot(token=\"Your TOKEN\", intents=wrapper.Intents().all()) async def fetch_channel(channel_id): pirnt(await bot.http.fetch_channel(channel_id)) loop = asyncio.get_event_loop() loop.run_until_complete(fetch_channel(put_your_channel_id)) async def fetch_message(channel_id, message_id): print(await bot.http.fetch_message(channel_id, message_id)) loop.run_until_complete(fetch_message(put_your_channel_id)) async def send_message(channel_id=None, content=None, *, embed=None): print(await bot.http.fetch_message(channel_id, content, embed)) loop.run_until_complete(send_message(put_your_args_here)) ========== async def fetch_channel(channel_id) Type: function ========== async def fetch_message(channel_id, message_id) Type: function ========== async def send_message(channel_id, content, *, embed) Type: function","title":"HTTP Requests"},{"location":"http_requests/#http-requests","text":"from discord import wrapper import asyncio bot = wrapper.Bot(token=\"Your TOKEN\", intents=wrapper.Intents().all()) async def fetch_channel(channel_id): pirnt(await bot.http.fetch_channel(channel_id)) loop = asyncio.get_event_loop() loop.run_until_complete(fetch_channel(put_your_channel_id)) async def fetch_message(channel_id, message_id): print(await bot.http.fetch_message(channel_id, message_id)) loop.run_until_complete(fetch_message(put_your_channel_id)) async def send_message(channel_id=None, content=None, *, embed=None): print(await bot.http.fetch_message(channel_id, content, embed)) loop.run_until_complete(send_message(put_your_args_here)) ========== async def fetch_channel(channel_id) Type: function ========== async def fetch_message(channel_id, message_id) Type: function ========== async def send_message(channel_id, content, *, embed) Type: function","title":"HTTP Requests"},{"location":"intents/","text":"Gateway Intents Intents from discord import wrapper bot = wrapper.Bot(token=\"Your TOKEN\", intents=wrapper.Intents().all()) bot.run() !!! warning You must have the () at the end of Intents and all or whatever type of intents your using. ========== class Intents() Type: class ========== def all() Type: function ========== def members() Type: function ========== def presences() Type: function","title":"Gateway Intents"},{"location":"intents/#gateway-intents","text":"","title":"Gateway Intents"},{"location":"intents/#intents","text":"from discord import wrapper bot = wrapper.Bot(token=\"Your TOKEN\", intents=wrapper.Intents().all()) bot.run() !!! warning You must have the () at the end of Intents and all or whatever type of intents your using. ========== class Intents() Type: class ========== def all() Type: function ========== def members() Type: function ========== def presences() Type: function","title":"Intents"}]}